{"id":"node_modules/express-validator/src/context-items/sanitization.js","dependencies":[{"name":"/mnt/c/Users/Clément/Documents/movie_api/package.json","includedInParent":true,"mtime":1598782959004},{"name":"/mnt/c/Users/Clément/Documents/movie_api/node_modules/express-validator/package.json","includedInParent":true,"mtime":1598781759434},{"name":"../utils","loc":{"line":4,"column":24},"parent":"/mnt/c/Users/Clément/Documents/movie_api/node_modules/express-validator/src/context-items/sanitization.js","resolved":"/mnt/c/Users/Clément/Documents/movie_api/node_modules/express-validator/src/utils.js"}],"generated":{"js":"\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sanitization = void 0;\n\nvar utils_1 = require(\"../utils\");\n\nvar Sanitization = /*#__PURE__*/function () {\n  function Sanitization(sanitizer, custom) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n    _classCallCheck(this, Sanitization);\n\n    this.sanitizer = sanitizer;\n    this.custom = custom;\n    this.options = options;\n  }\n\n  _createClass(Sanitization, [{\n    key: \"run\",\n    value: function () {\n      var _run = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(context, value, meta) {\n        var path, location, newValue;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                path = meta.path, location = meta.location;\n                newValue = this.custom ? this.sanitizer(value, meta) : this.sanitizer.apply(this, [utils_1.toString(value)].concat(_toConsumableArray(this.options)));\n                context.setData(path, newValue, location);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function run(_x, _x2, _x3) {\n        return _run.apply(this, arguments);\n      }\n\n      return run;\n    }()\n  }]);\n\n  return Sanitization;\n}();\n\nexports.Sanitization = Sanitization;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":1,"column":0}},{"name":"Object","generated":{"line":25,"column":0},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":2,"column":0}},{"generated":{"line":25,"column":6},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":2,"column":6}},{"name":"defineProperty","generated":{"line":25,"column":7},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":2,"column":7}},{"generated":{"line":25,"column":21},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":2,"column":0}},{"name":"exports","generated":{"line":25,"column":22},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":2,"column":22}},{"generated":{"line":25,"column":29},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":2,"column":0}},{"generated":{"line":25,"column":31},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":2,"column":31}},{"generated":{"line":25,"column":43},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":2,"column":0}},{"generated":{"line":25,"column":45},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":2,"column":45}},{"name":"value","generated":{"line":26,"column":0},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":2,"column":47}},{"name":"value","generated":{"line":26,"column":2},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":2,"column":47}},{"generated":{"line":26,"column":7},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":2,"column":52}},{"generated":{"line":26,"column":9},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":2,"column":54}},{"generated":{"line":27,"column":0},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":2,"column":45}},{"generated":{"line":27,"column":1},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":2,"column":0}},{"name":"exports","generated":{"line":28,"column":0},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":3,"column":0}},{"generated":{"line":28,"column":7},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":3,"column":7}},{"name":"Sanitization","generated":{"line":28,"column":8},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":3,"column":8}},{"generated":{"line":28,"column":20},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":3,"column":0}},{"generated":{"line":28,"column":23},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":3,"column":23}},{"generated":{"line":28,"column":28},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":3,"column":28}},{"generated":{"line":28,"column":29},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":3,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":4,"column":0}},{"name":"utils_1","generated":{"line":30,"column":4},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":4,"column":6}},{"generated":{"line":30,"column":11},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":4,"column":13}},{"name":"require","generated":{"line":30,"column":14},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":4,"column":16}},{"generated":{"line":30,"column":21},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":4,"column":23}},{"generated":{"line":30,"column":22},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":4,"column":24}},{"generated":{"line":30,"column":32},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":4,"column":23}},{"generated":{"line":30,"column":33},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":4,"column":0}},{"name":"Sanitization","generated":{"line":32,"column":4},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":5,"column":6}},{"generated":{"line":33,"column":0},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":6,"column":4}},{"name":"sanitizer","generated":{"line":33,"column":24},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":6,"column":16}},{"generated":{"line":33,"column":33},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":6,"column":4}},{"name":"custom","generated":{"line":33,"column":35},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":6,"column":27}},{"generated":{"line":33,"column":41},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":6,"column":4}},{"generated":{"line":33,"column":43},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":6,"column":49}},{"generated":{"line":34,"column":0},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":6,"column":49}},{"name":"options","generated":{"line":34,"column":8},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":6,"column":35}},{"generated":{"line":34,"column":15},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":6,"column":49}},{"generated":{"line":34,"column":86},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":6,"column":45}},{"generated":{"line":34,"column":88},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":6,"column":49}},{"generated":{"line":36,"column":0},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":6,"column":49}},{"generated":{"line":38,"column":0},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":7,"column":8}},{"name":"sanitizer","generated":{"line":38,"column":9},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":7,"column":13}},{"generated":{"line":38,"column":18},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":7,"column":8}},{"name":"sanitizer","generated":{"line":38,"column":21},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":7,"column":25}},{"generated":{"line":38,"column":30},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":7,"column":8}},{"generated":{"line":39,"column":0},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":8,"column":8}},{"name":"custom","generated":{"line":39,"column":9},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":8,"column":13}},{"generated":{"line":39,"column":15},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":8,"column":8}},{"name":"custom","generated":{"line":39,"column":18},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":8,"column":22}},{"generated":{"line":39,"column":24},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":8,"column":8}},{"generated":{"line":40,"column":0},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":9,"column":8}},{"name":"options","generated":{"line":40,"column":9},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":9,"column":13}},{"generated":{"line":40,"column":16},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":9,"column":8}},{"name":"options","generated":{"line":40,"column":19},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":9,"column":23}},{"generated":{"line":40,"column":26},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":9,"column":8}},{"generated":{"line":41,"column":0},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":10,"column":5}},{"name":"context","generated":{"line":46,"column":90},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":11,"column":14}},{"name":"value","generated":{"line":46,"column":99},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":11,"column":23}},{"name":"meta","generated":{"line":46,"column":106},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":11,"column":30}},{"name":"path","generated":{"line":52,"column":0},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":12,"column":16}},{"name":"path","generated":{"line":52,"column":16},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":12,"column":16}},{"name":"meta","generated":{"line":52,"column":23},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":12,"column":35}},{"name":"path","generated":{"line":52,"column":28},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":12,"column":16}},{"name":"location","generated":{"line":52,"column":34},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":12,"column":22}},{"name":"meta","generated":{"line":52,"column":45},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":12,"column":35}},{"name":"location","generated":{"line":52,"column":50},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":12,"column":22}},{"name":"newValue","generated":{"line":53,"column":0},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":13,"column":14}},{"name":"newValue","generated":{"line":53,"column":16},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":13,"column":14}},{"generated":{"line":53,"column":27},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":13,"column":25}},{"name":"custom","generated":{"line":53,"column":32},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":13,"column":30}},{"generated":{"line":53,"column":38},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":13,"column":25}},{"generated":{"line":53,"column":41},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":14,"column":14}},{"name":"sanitizer","generated":{"line":53,"column":46},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":14,"column":19}},{"generated":{"line":53,"column":55},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":14,"column":14}},{"name":"value","generated":{"line":53,"column":56},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":14,"column":29}},{"generated":{"line":53,"column":61},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":14,"column":14}},{"name":"meta","generated":{"line":53,"column":63},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":14,"column":36}},{"generated":{"line":53,"column":67},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":14,"column":14}},{"generated":{"line":53,"column":68},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":13,"column":25}},{"generated":{"line":53,"column":71},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":15,"column":14}},{"name":"sanitizer","generated":{"line":53,"column":76},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":15,"column":19}},{"generated":{"line":53,"column":85},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":15,"column":14}},{"name":"utils_1","generated":{"line":53,"column":99},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":15,"column":29}},{"generated":{"line":53,"column":106},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":15,"column":36}},{"name":"toString","generated":{"line":53,"column":107},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":15,"column":37}},{"generated":{"line":53,"column":115},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":15,"column":29}},{"name":"value","generated":{"line":53,"column":116},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":15,"column":46}},{"generated":{"line":53,"column":121},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":15,"column":29}},{"generated":{"line":53,"column":122},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":15,"column":14}},{"generated":{"line":53,"column":150},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":15,"column":57}},{"name":"options","generated":{"line":53,"column":155},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":15,"column":62}},{"generated":{"line":53,"column":162},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":15,"column":14}},{"name":"context","generated":{"line":54,"column":0},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":16,"column":8}},{"name":"context","generated":{"line":54,"column":16},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":16,"column":8}},{"generated":{"line":54,"column":23},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":16,"column":15}},{"name":"setData","generated":{"line":54,"column":24},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":16,"column":16}},{"generated":{"line":54,"column":31},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":16,"column":8}},{"name":"path","generated":{"line":54,"column":32},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":16,"column":24}},{"generated":{"line":54,"column":36},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":16,"column":8}},{"name":"newValue","generated":{"line":54,"column":38},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":16,"column":30}},{"generated":{"line":54,"column":46},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":16,"column":8}},{"name":"location","generated":{"line":54,"column":48},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":16,"column":40}},{"generated":{"line":54,"column":56},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":16,"column":8}},{"name":"exports","generated":{"line":75,"column":0},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":19,"column":0}},{"generated":{"line":75,"column":7},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":19,"column":7}},{"name":"Sanitization","generated":{"line":75,"column":8},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":19,"column":8}},{"generated":{"line":75,"column":20},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":19,"column":0}},{"name":"Sanitization","generated":{"line":75,"column":23},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":19,"column":23}},{"generated":{"line":75,"column":35},"source":"node_modules/express-validator/src/context-items/sanitization.js","original":{"line":19,"column":0}}],"sources":{"node_modules/express-validator/src/context-items/sanitization.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sanitization = void 0;\nconst utils_1 = require(\"../utils\");\nclass Sanitization {\n    constructor(sanitizer, custom, options = []) {\n        this.sanitizer = sanitizer;\n        this.custom = custom;\n        this.options = options;\n    }\n    async run(context, value, meta) {\n        const { path, location } = meta;\n        const newValue = this.custom\n            ? this.sanitizer(value, meta)\n            : this.sanitizer(utils_1.toString(value), ...this.options);\n        context.setData(path, newValue, location);\n    }\n}\nexports.Sanitization = Sanitization;\n"},"lineCount":null}},"error":null,"hash":"999c422588be67aa7c760790886a4fb3","cacheData":{"env":{}}}